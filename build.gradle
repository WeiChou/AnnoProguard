/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        jcenter()
//        mavenCentral()
    }
    dependencies {
//        classpath 'com.android.tools.build:gradle:2.2.0'
//        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
//plugins {
//    id "com.github.dcendents.android-maven" version "1.5"
//}

allprojects {
    repositories {
        jcenter()
    }
}

apply plugin: 'java'
//apply plugin: 'application'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'

repositories {
    jcenter()
}

dependencies {
//    compile 'com.google.guava:guava:20.0'
    // Use JUnit test framework
//    testCompile 'junit:junit:4.12'
}

// Define the main class for the application
//mainClassName = 'App'

sourceSets {
    main {
        java {
            srcDirs 'src'
            exclude 'src/test'
        }
    }
    test {
        java.srcDirs 'src/test'
    }
}

//////////////////////////////////////////////////////////////////////////////////
///////////////////////////////// 以下用于打包上传 /////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

//apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'

// Maven Group ID for the artifact
group = "hobby.wei.c"
// This is the library version used when deploying the artifact
version = "1.0.0"

def projectName = rootProject.name
def artifact = projectName.toLowerCase() // 不是project的属性，自定义变量，所以有def.

// 以下可用于发布到Maven仓库
//uploadArchives {
//    repositories.mavenDeployer {
//        repository(url: uri('repo'))
//        repository(url: "http://host:port/xxx/repositories/snapshots/") {
//            authentication(userName: "admin", password: "pwd")
//            pom.groupId = "$project.group"
//            pom.artifactId = "$artifact"
//            pom.version = "$project.version"
//        }
//    }
//}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar', '*.pro'])
//    compile 'com.nineoldandroids:library:2.4.0+'
}

// 在命令gradle xxx后面带参数即可 -DforGithub=true/false 即可.
def forGithub = System.getProperty('forGithub') ?: true
def baseUrl = forGithub ? 'https://github.com/WeiChou' : 'https://git.oschina.net/wei.chou'
def siteUrl = '${baseUrl}/Annoguard'      // 项目的主页
def gitUrl = '${baseUrl}/Annoguard.git'   // Git仓库的url

// 安装到.m2本地仓库
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom.project {
            // packaging 'aar' // 只有android有aar
            name projectName
            description 'An Annotation implementation of Proguard' // 项目描述
            url siteUrl

            groupId project.group
            artifactId artifact
            version project.version

            licenses {
//                inceptionYear '2016' // 这一句会报错
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            developers {
                developer {
                    id 'hobby'
                    name 'Wei.Chou'
                    email 'iots.im@qq.com'
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

// 解决中文乱码问题，在~/.gradle/wrapper/dists/gradle-x.x-all/xxx/gradle-x.x/bin/gradle(.bat)中找到以下参数并设置值：
// DEFAULT_JVM_OPTS="-Dfile.encoding=UTF-8"
// 但本方法也不行，算了。

//task javadoc(type: Javadoc) {
//    source = sourceSets.main.java.srcDirs
//    // 没有android
////    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
// 要求不能使用自关闭元素如<br/>，所以暂不输出文档。
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    from javadoc.destinationDir
//    classifier = 'javadoc'
//}
artifacts {
//    archives javadocJar
    archives sourcesJar
}

//Properties properties = new Properties()
//properties.load(project.rootProject.file('gradle.properties').newDataInputStream())
bintray {
    user = BINTRAY_USER     // properties.getProperty("bintray.user")
    key = BINTRAY_APIKEY    // properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = projectName  // 发布到JCenter上的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        publish = true
    }
}

// 该命令用于生成jar包
//gradlew install -DforGithub=true/false

// 该命令用于上传
//gradlew bintrayUpload
